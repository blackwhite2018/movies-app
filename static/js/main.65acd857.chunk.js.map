{"version":3,"sources":["components/Search/index.ts","components/Search/Search.tsx","components/Error/index.ts","components/Error/Error.tsx","components/NotItems/index.ts","components/NotItems/NotItems.tsx","config.ts","components/App/App.tsx","components/App/index.ts","index.tsx","Helpers/Function/fetchData.ts","Helpers/Function/strSliceMaxLen.ts","Helpers/Function/debounce.ts","components/context/Genres.ts"],"names":["Search","searchData","useState","value","setValue","debounceFn","debounce","type","className","placeholder","onChange","evt","target","Error","message","description","closable","NotItems","URL_MOVIES","API_KEY","TabPane","Tabs","navbar","List","lazy","App","error","setError","activeTab","setTabs","films","setFilms","page","setPage","sizePage","currentValueSearch","setCurrentValueSearch","genres","setGenres","sessionID","setSessionID","createGuestSession","a","fetchData","sessionResponse","success","guest_session_id","localStorage","setItem","e","updateFilms","response","splice","reduce","acc","item","newItem","id","shortid","generate","isValid","Date","release_date","format","loadData","data","genresIds","results","handleTabs","key","useEffect","defaultActiveKey","centered","map","index","tab","length","fallback","Genres","Provider","items","handleChangeRate","fetch","method","headers","body","JSON","stringify","defaultCurrent","defaultPageSize","newPage","pageSize","size","total","render","StrictMode","document","getElementById","url","json","strOrigin","nbr","res","split","str","push","join","fn","ms","timerID","args","clearTimeout","setTimeout","createContext"],"mappings":"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","file":"static/js/main.65acd857.chunk.js","sourcesContent":["import Search from './Search';\n\nexport default Search;\n","import React, { useState } from 'react';\n\nimport { debounce } from '../../Helpers';\nimport SearchDataType from '../interface/SearchDataType';\nimport './index.css';\n\nexport default ({ searchData }: SearchDataType): JSX.Element => {\n  const [value, setValue] = useState<string>('');\n  const debounceFn: Function = debounce(searchData, 700);\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>): void => {\n    const target = evt.target as HTMLInputElement;\n    setValue(target.value);\n    debounceFn(target.value);\n  };\n\n  return (\n    <input\n      type=\"search\"\n      className=\"search-input navbar__search-input\"\n      placeholder=\"Type to search...\"\n      value={value}\n      onChange={handleChange}\n    />\n  );\n};\n","import Error from './Error';\n\nexport default Error;\n","import React from 'react';\nimport { Alert } from 'antd';\n\nexport default () => (\n  <Alert\n    message=\"Error Text\"\n    description=\"Error Description Error Description Error Description Error Description\"\n    type=\"error\"\n    closable\n  />\n);\n","import NotItems from './NotItems';\n\nexport default NotItems;\n","import React from 'react';\nimport NotItems from '../interface/NotItems';\n\nexport default ({ message }: NotItems) => <div>{message}</div>;\n","const URL_MOVIES = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'e9f559802c673e3e74a73543bc0c8382';\n\nexport { URL_MOVIES, API_KEY };\n","import React, { useState, useEffect, lazy, Suspense } from 'react';\nimport shortid from 'shortid';\nimport { Tabs, Pagination, Spin } from 'antd';\nimport 'antd/dist/antd.css';\nimport { format, isValid } from 'date-fns';\n\nimport FilmItem from '../interface/FilmItem';\nimport SearchInput from '../Search';\nimport Error from '../Error';\nimport NotItems from '../NotItems';\n\nimport { fetchData } from '../../Helpers';\nimport Genres from '../context/Genres';\nimport ResponseGenres from '../interface/ResponseGenres';\nimport ResponseFilm from '../interface/ResponseFilm';\nimport ResponseGuestSession from '../interface/ResponseGuestSession';\nimport IGenre from '../interface/Genre';\nimport { URL_MOVIES, API_KEY } from '../../config';\nimport './index.css';\n\nconst { TabPane } = Tabs;\n\nconst navbar: Array<string> = ['Search', 'Rated'];\nlet List: any = lazy(() => import('../List'));\n\nconst App: React.FC = () => {\n  const [error, setError] = useState<boolean>(false);\n  const [activeTab, setTabs] = useState<string>('1');\n  const [films, setFilms] = useState<Array<FilmItem>>([]);\n  const [page, setPage] = useState<number>(1);\n  const [sizePage, setSizePage] = useState<number>(10);\n  const [currentValueSearch, setCurrentValueSearch] = useState<string>('return');\n  const [genres, setGenres] = useState<Array<IGenre>>([]);\n  const [sessionID, setSessionID] = useState<string>('');\n\n  const createGuestSession = async (): Promise<void> => {\n    const sessionResponse: ResponseGuestSession | null = await fetchData(\n      `${URL_MOVIES}authentication/guest_session/new?api_key=${API_KEY}`\n    );\n\n    if (!sessionResponse) {\n      setError(true);\n      return;\n    }\n\n    const { success, guest_session_id }: ResponseGuestSession = sessionResponse;\n\n    if (success) {\n      try {\n        localStorage.setItem('uuid_session', guest_session_id);\n        setSessionID(guest_session_id);\n      } catch (e) {\n        setError(true);\n      }\n    }\n  };\n\n  const updateFilms = (response: Array<FilmItem>) => {\n    setFilms(\n      response.splice((page - 1) * sizePage, sizePage).reduce((acc: Array<FilmItem>, item: FilmItem): Array<\n        FilmItem\n      > => {\n        const newItem = { id: shortid.generate(), ...item };\n        if (!isValid(new Date(item.release_date))) newItem.release_date = '';\n        else newItem.release_date = format(new Date(item.release_date), 'MMMM dd, yyyy');\n        return [...acc, newItem];\n      }, [])\n    );\n  };\n\n  const loadData = async (value: string): Promise<void> => {\n    const data: ResponseFilm | null = await fetchData(\n      `${URL_MOVIES}search/movie?api_key=${API_KEY}&query=${value}&page=${page}`\n    );\n\n    const genresIds: ResponseGenres | null = await fetchData(`${URL_MOVIES}genre/movie/list?api_key=${API_KEY}`);\n\n    if (data?.success === false) {\n      setError(true);\n      return;\n    }\n\n    if (genresIds) setGenres(genresIds.genres);\n\n    if (data) {\n      const { results } = data;\n      updateFilms(results);\n    } else setError(true);\n  };\n\n  const handleTabs = async (key: string) => {\n    if (key !== activeTab) {\n      setTabs(key);\n      const response: ResponseFilm | null = await fetchData(\n        `${URL_MOVIES}guest_session/${sessionID}/rated/movies?api_key=${API_KEY}&language=en-US&sort_by=created_at.asc`\n      );\n      switch (key) {\n        case '1':\n          loadData(currentValueSearch);\n          break;\n        case '2':\n          if (response) {\n            const { results } = response;\n            updateFilms(results);\n          }\n          break;\n      }\n    }\n  };\n\n  useEffect(() => {\n    loadData(currentValueSearch);\n    createGuestSession();\n  }, []);\n\n  useEffect(() => {\n    List = lazy(() => import('../List'));\n  }, [films]);\n\n  useEffect(() => {\n    loadData(currentValueSearch);\n  }, [page]);\n\n  const searchData = (value: string): void => {\n    loadData(value);\n    setCurrentValueSearch(value);\n  };\n\n  if (error) {\n    return <Error />;\n  }\n\n  const handleChangePagination = (newPage: number, pageSize: any) => {\n    if (page !== newPage) setPage(newPage);\n  };\n\n  const handleChangeRate = (id: number, value: number) => {\n    fetch(`${URL_MOVIES}movie/${id}/rating?api_key=${API_KEY}&guest_session_id=${sessionID}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({ value }),\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"wrapper\">\n        <div className=\"navbar\">\n          <div className=\"navbar-wrapper\">\n            <Tabs defaultActiveKey={activeTab} centered onChange={handleTabs}>\n              {navbar.map((item: string, index: number) => (\n                <TabPane tab={item} key={index + 1} />\n              ))}\n            </Tabs>\n            <SearchInput searchData={searchData} />\n          </div>\n        </div>\n        {films.length === 0 ? (\n          <NotItems message=\"No movies found\" />\n        ) : (\n          <Suspense fallback={<Spin />}>\n            <Genres.Provider value={genres}>\n              <List items={films} handleChangeRate={handleChangeRate} />\n            </Genres.Provider>\n          </Suspense>\n        )}\n        <Pagination\n          defaultCurrent={page}\n          defaultPageSize={sizePage}\n          onChange={handleChangePagination}\n          size=\"small\"\n          total={50}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export default async <T>(url: string): Promise<T | null> => {\n  try {\n    const response = await fetch(url);\n    const json = await response.json();\n    return json;\n  } catch (e) {\n    return null;\n  }\n};\n","export default (strOrigin: string, nbr: number): string => {\n  if (strOrigin.length === 0) {\n    return '';\n  }\n  let length: number = 0;\n  const arr: Array<string> = strOrigin.split(' ');\n  const res: Array<string> = arr.reduce((acc: Array<string>, str: string): Array<string> => {\n    if (str.length + length <= nbr) {\n      length += str.length;\n      acc.push(str);\n    }\n    return [...acc];\n  }, []);\n  return `${res.join(' ')}...`;\n};\n","export default (fn: Function, ms: number): Function => {\n  let timerID: any;\n  return (...args: Array<any>) => {\n    clearTimeout(timerID);\n    timerID = setTimeout(() => {\n      timerID = null;\n      fn(...args);\n    }, ms);\n  };\n};\n","import { createContext } from 'react';\nimport IGenre from '../interface/Genre';\n\nconst Genres = createContext<Array<IGenre>>([]);\n\nexport default Genres;\n"],"sourceRoot":""}