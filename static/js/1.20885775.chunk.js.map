{"version":3,"sources":["components/ListItem/index.ts","components/ListItem/ListItem.tsx","components/List/index.ts","components/List/List.tsx"],"names":["ListItem","rating","id","data","original_title","release_date","vote_average","overview","genre_ids","handleChangeRate","genres","useContext","Genres","classNameAverage","className","src","process","alt","map","genre_id","key","name","strSliceMaxLen","onChange","value","count","allowHalf","defaultValue","List","items"],"mappings":"yNAEeA,G,OCcA,YAIH,IAZSC,EASnBC,EAGS,EAHTA,GAGS,IAFTC,KAAQC,EAEC,EAFDA,eAAgBC,EAEf,EAFeA,aAAcC,EAE7B,EAF6BA,aAAcC,EAE3C,EAF2CA,SAAUC,EAErD,EAFqDA,UAC9DC,EACS,EADTA,iBAEMC,EAAwBC,qBAA0BC,KAElDC,EAAgB,iBAfHZ,EAe2BK,IAdhC,GAAKL,EAAS,EAAU,kBAClCA,GAAU,GAAKA,EAAS,EAAU,kBAClCA,GAAU,GAAKA,EAAS,EAAU,kBAClCA,GAAU,EAAU,kBACjB,IAgBP,OACE,yBAAKa,UAAU,aACb,yBAAKC,IAAG,UAAKC,cAAL,gBAA2CC,IAAI,eAAeH,UAAU,6BAChF,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,qBAAqBV,GACnC,0BAAMU,UAAU,mBAAmBT,GACnC,yBAAKS,UAAU,oCACZN,EAAUU,KAAI,SAACC,GAAD,OAAsBT,EAAOS,IAAa,kBAAC,IAAD,CAAKC,IAAKD,GAAWT,EAAOS,GAAUE,UAEjG,yBAAKP,UAAWD,GAAmBP,IAErC,uBAAGQ,UAAU,0BAA0BQ,YAAef,EAAU,MAChE,kBAAC,IAAD,CAAMgB,SAjBS,SAACC,GACpBf,EAAiBP,EAAIsB,IAgBaC,MAAO,GAAIC,WAAS,EAACC,aAAcrB,Q,OCxC1DsB,UCIA,gBAAGC,EAAH,EAAGA,MAAOpB,EAAV,EAAUA,iBAAV,OACb,yBAAKK,UAAU,sBACZe,EAAMX,KAAI,gBAAGhB,EAAH,EAAGA,GAAIE,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,aAAcC,EAArC,EAAqCA,aAAcC,EAAnD,EAAmDA,SAAUC,EAA7D,EAA6DA,UAA7D,OACT,kBAAC,EAAD,CACEY,IAAKlB,EACLA,GAAIA,EACJC,KAAM,CACJC,iBACAC,eACAC,eACAC,WACAC,aAEFC,iBAAkBA","file":"static/js/1.20885775.chunk.js","sourcesContent":["import ListItem from './ListItem';\n\nexport default ListItem;\n","import React, { useContext } from 'react';\nimport { Tag, Rate } from 'antd';\n\nimport Genres from '../context/Genres';\nimport IGenre from '../interface/Genre';\nimport { strSliceMaxLen } from '../../Helpers';\nimport './index.css';\n\nconst ratingColor = (rating: number): string => {\n  if (rating >= 0 && rating < 3) return ' rating-color-1';\n  if (rating >= 3 && rating < 5) return ' rating-color-2';\n  if (rating >= 5 && rating < 7) return ' rating-color-3';\n  if (rating >= 7) return ' rating-color-4';\n  return '';\n};\n\nexport default ({\n  id,\n  data: { original_title, release_date, vote_average, overview, genre_ids },\n  handleChangeRate,\n}: any) => {\n  const genres: Array<IGenre> = useContext<Array<IGenre>>(Genres);\n\n  const classNameAverage = `rating${ratingColor(vote_average)}`;\n\n  const handleChange = (value: number) => {\n    handleChangeRate(id, value);\n  };\n\n  return (\n    <div className=\"list-item\">\n      <img src={`${process.env.PUBLIC_URL}/img/img.jpg`} alt=\"The way back\" className=\"poster list-item__poster\" />\n      <div className=\"list-item__container\">\n        <div className=\"list-item__meta\">\n          <h5 className=\"list-item__header\">{original_title}</h5>\n          <time className=\"list-item__date\">{release_date}</time>\n          <div className=\"list-genre list-item__list-genre\">\n            {genre_ids.map((genre_id: number) => genres[genre_id] && <Tag key={genre_id}>{genres[genre_id].name}</Tag>)}\n          </div>\n          <div className={classNameAverage}>{vote_average}</div>\n        </div>\n        <p className=\"list-item__description\">{strSliceMaxLen(overview, 120)}</p>\n        <Rate onChange={handleChange} count={10} allowHalf defaultValue={vote_average} />\n      </div>\n    </div>\n  );\n};\n","import List from './List';\n\nexport default List;\n","import React from 'react';\n\nimport ListItem from '../ListItem';\nimport FilmItem from '../interface/FilmItem';\nimport './index.css';\n\nexport default ({ items, handleChangeRate }: any) => (\n  <div className=\"list wrapper__list\">\n    {items.map(({ id, original_title, release_date, vote_average, overview, genre_ids }: FilmItem) => (\n      <ListItem\n        key={id}\n        id={id}\n        data={{\n          original_title,\n          release_date,\n          vote_average,\n          overview,\n          genre_ids,\n        }}\n        handleChangeRate={handleChangeRate}\n      />\n    ))}\n  </div>\n);\n"],"sourceRoot":""}